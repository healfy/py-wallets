{
  "swagger": "2.0",
  "info": {
    "title": "Wallets service",
    "version": "1.0"
  },
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/check_balance": {
      "get": {
        "summary": "Check Balance of platform wallets when issue loan",
        "description": "Check balance when we issue loan",
        "operationId": "CheckBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/walletsCheckBalanceResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body_currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "body_amount",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallets"
        ]
      }
    },
    "/get_input_trx": {
      "get": {
        "summary": "Endpoint to get wallet input transactions",
        "description": "Endpoint to get wallet input transactions",
        "operationId": "GetInputTransactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/walletsInputTransactionsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "wallet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "wallet_address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time_from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "time_to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallets"
        ]
      }
    },
    "/health": {
      "get": {
        "summary": "Health checking endpoint",
        "description": "Health checking endpoint. Returns HealthzResponse",
        "operationId": "Healthz",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/walletsHealthzResponse"
            }
          }
        },
        "tags": [
          "Wallets"
        ]
      }
    },
    "/start_monitoring": {
      "post": {
        "summary": "Start monitoring wallet on service endpoint",
        "description": "Send wallet with params to start monitoring on service",
        "operationId": "StartMonitoring",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/walletsMonitoringResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/walletsMonitoringRequest"
            }
          }
        ],
        "tags": [
          "Wallets"
        ]
      }
    },
    "/start_monitoring/platform": {
      "post": {
        "summary": "Endpoint to start monitoring platform wallet",
        "description": "Endpoint to start monitoring platform wallet",
        "operationId": "StartMonitoringPlatformWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/walletsPlatformWLTMonitoringResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/walletsPlatformWLTMonitoringRequest"
            }
          }
        ],
        "tags": [
          "Wallets"
        ]
      }
    },
    "/stop_monitoring": {
      "post": {
        "summary": "Stop monitoring wallet on service endpoint",
        "description": "Send wallet with params to stop monitoring on service",
        "operationId": "StopMonitoring",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/walletsMonitoringResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/walletsMonitoringRequest"
            }
          }
        ],
        "tags": [
          "Wallets"
        ]
      }
    },
    "/update_trx": {
      "post": {
        "summary": "Endpoint to update transaction",
        "description": "Update status transactions from blockchain",
        "operationId": "UpdateTrx",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/walletsTransactionResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/walletsTransactionRequest"
            }
          }
        ],
        "tags": [
          "Wallets"
        ]
      }
    }
  },
  "definitions": {
    "walletsCheckBalanceResponse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/walletsResponseHeader"
        }
      }
    },
    "walletsHealthzResponse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/walletsResponseHeader"
        }
      }
    },
    "walletsInputTransactionsResponse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/walletsResponseHeader"
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/walletsTransaction"
          }
        }
      }
    },
    "walletsMonitoringRequest": {
      "type": "object",
      "properties": {
        "wallet": {
          "$ref": "#/definitions/walletsWallet"
        }
      }
    },
    "walletsMonitoringResponse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/walletsResponseHeader"
        }
      }
    },
    "walletsPlatformWLTMonitoringRequest": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "expected_address": {
          "type": "string"
        },
        "expected_amount": {
          "type": "string"
        },
        "wallet_id": {
          "type": "string",
          "format": "int64"
        },
        "wallet_address": {
          "type": "string"
        },
        "expected_currency": {
          "type": "string"
        }
      }
    },
    "walletsPlatformWLTMonitoringResponse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/walletsResponseHeader"
        }
      }
    },
    "walletsResponseHeader": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/walletsResponseStatus"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "walletsResponseStatus": {
      "type": "string",
      "enum": [
        "NOT_SET",
        "SUCCESS",
        "ERROR",
        "INVALID_REQUEST"
      ],
      "default": "NOT_SET"
    },
    "walletsTransaction": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "wallet_id": {
          "type": "string",
          "format": "int64"
        },
        "currencySlug": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/walletsTransactionStatus"
        },
        "is_fee_trx": {
          "type": "boolean",
          "format": "boolean"
        },
        "time_confirmed": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "walletsTransactionRequest": {
      "type": "object",
      "properties": {
        "transaction": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/walletsTransaction"
          }
        }
      }
    },
    "walletsTransactionResponse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/walletsResponseHeader"
        }
      }
    },
    "walletsTransactionStatus": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "NEW",
        "NOT_FOUND",
        "SUCCESSFUL",
        "FAILED",
        "PENDING",
        "CONFIRMED"
      ],
      "default": "UNDEFINED"
    },
    "walletsWallet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "currency_slug": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "is_platform": {
          "type": "boolean",
          "format": "boolean"
        },
        "external_id": {
          "type": "string",
          "format": "int64"
        }
      }
    }
  }
}
