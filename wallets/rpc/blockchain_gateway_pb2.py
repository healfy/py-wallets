# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blockchain_gateway.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from protoc_gen_swagger.options import annotations_pb2 as protoc__gen__swagger_dot_options_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='blockchain_gateway.proto',
  package='blockchain_gateway',
  syntax='proto3',
  serialized_options=_b('Z\003bgw\222A\234\003\022\351\002\n\032Blockchain Gateway Service\022\305\002Gateway for interaction with different blockchains throw universal API. Prefered format for addresses is `hex` if it\'s possible. Amounts are in strings for precision. `Fee` fields are not supposed to use for now, only for future use or will be removed in some cases. All fields that are not marked as `required` are optional.2\0031.0\"\007/api/v1*\001\0012\020application/json:\020application/json'),
  serialized_pb=_b('\n\x18\x62lockchain_gateway.proto\x12\x12\x62lockchain_gateway\x1a\x1cgoogle/api/annotations.proto\x1a,protoc-gen-swagger/options/annotations.proto\"\x8c\x02\n\x0eResponseHeader\x12[\n\x06status\x18\x01 \x01(\x0e\x32\".blockchain_gateway.ResponseStatusB\'\x92\x41$2\x17General response status:\tUNDEFINED\x12\x35\n\x0b\x64\x65scription\x18\x02 \x01(\tB \x92\x41\x1d\x32\x1b\x44\x65scription of error if any:f\x92\x41\x63\n3*(General Response Header For All Messages\xd2\x01\x06status2,\x12*{ \"status\": \"SUCCESS\", \"description\": \"\" }\"\x0e\n\x0c\x45mptyRequest\"\xa4\x01\n\x1b\x41vailableCurrenciesResponse\x12\x32\n\x06status\x18\x01 \x01(\x0b\x32\".blockchain_gateway.ResponseHeader\x12\x30\n\ncurrencies\x18\x02 \x03(\x0b\x32\x1c.blockchain_gateway.Currency:\x1f\x92\x41\x1c\n\x1a*\x0f\x43urrencies list\xd2\x01\x06status\"\xcf\x01\n\x08\x43urrency\x12(\n\x02id\x18\x01 \x01(\x05\x42\x1c\x92\x41\x19\x32\x14Internal currency id:\x01\x30\x12\x0c\n\x04name\x18\x02 \x01(\t\x12.\n\x04slug\x18\x03 \x01(\tB \x92\x41\x1d\x32\x1bPlatform wide currency slug:[\x92\x41X\n\x16*\rCurrency item\xd2\x01\x04slug2>\x12<{ \"id\": 1, \"name\": \"superpuperaltcoin\", \"slug\": \"failcoin\" }\"\xc4\x01\n\x12GetBalanceResponse\x12\x32\n\x06status\x18\x01 \x01(\x0b\x32\".blockchain_gateway.ResponseHeader\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\t\x12\x32\n\x04time\x18\x03 \x01(\x03\x42$\x92\x41!2\x1cTimestamp of getting balance:\x01\x30:5\x92\x41\x32\n0*\x1b\x42\x61lance of specified wallet\xd2\x01\x06status\xd2\x01\x07\x62\x61lance\"\xed\x01\n\x11GetBalanceRequest\x12\x1a\n\x02id\x18\x01 \x01(\x05\x42\x0e\x92\x41\x0b\x32\twallet id\x12$\n\x07\x61\x64\x64ress\x18\x02 \x01(\tB\x13\x92\x41\x10\x32\x0ewallet address:\x95\x01\x92\x41\x91\x01\n|*\x1b\x42\x61lance of specified wallet2]If no wallet `id` specified `address` used to find it. Using only `address` is not recomended2\x11\x12\x0f{ \"id\": \"800\" }\"\xa4\x02\n\x10GetWalletRequest\x12\x35\n\x02id\x18\x01 \x01(\x05\x42)\x92\x41&2$Wallet ID. Skip to create new wallet\x12\x36\n\x0c\x63urrencySlug\x18\x02 \x01(\tB \x92\x41\x1d\x32\x1bPlatform wide currency slug:\xa0\x01\x92\x41\x9c\x01\nx*\x1cGet-or-create wallet request2XIf wallet `id` specified -- get wallet data. If only `currencySlug` -- create new wallet2 \x12\x1e{ \"currencySlug\": \"ethereum\" }\"\x94\x03\n\x11GetWalletResponse\x12\x32\n\x06status\x18\x01 \x01(\x0b\x32\".blockchain_gateway.ResponseHeader\x12\x1a\n\x02id\x18\x02 \x01(\x05\x42\x0e\x92\x41\x0b\x32\twallet id\x12+\n\x07\x61\x64\x64ress\x18\x03 \x01(\tB\x1a\x92\x41\x17\x32\x15wallet public address\x12\x36\n\x0c\x63urrencySlug\x18\x04 \x01(\tB \x92\x41\x1d\x32\x1bplatform wide currency slug:\xc9\x01\x92\x41\xc5\x01\n8*\x0fWallet response\xd2\x01\x06status\xd2\x01\x02id\xd2\x01\x07\x61\x64\x64ress\xd2\x01\x0c\x63urrencySlug2\x88\x01\x12\x85\x01{ \"status\": {\"status\": \"SUCCESS\"}, \"currencySlug\": \"ethereum\", \"id\": \"523\", \"address\": \"0xa07edA228F8053B40ec339b22De95B44a7da1E3A\" }\"\xad\x02\n\x16SendTransactionMessage\x12\x32\n\x06status\x18\x01 \x01(\x0b\x32\".blockchain_gateway.ResponseHeader\x12\x34\n\x0btransaction\x18\x02 \x01(\x0b\x32\x1f.blockchain_gateway.Transaction:\xa8\x01\x92\x41\xa4\x01\n\xa1\x01*\x1fTransaction Data for Blockchain2pSend this message to write it to some blockchain and the with some updates (like used fee) will be returned back\xd2\x01\x0btransaction\"\xcf\x05\n\x0bTransaction\x12%\n\x02id\x18\x01 \x01(\x05\x42\x19\x92\x41\x16\x32\x14not used, depricated\x12!\n\x04\x66rom\x18\x02 \x01(\tB\x13\x92\x41\x10\x32\x0esender address\x12!\n\x02to\x18\x03 \x01(\tB\x15\x92\x41\x12\x32\x10reciever address\x12\x36\n\x0c\x63urrencySlug\x18\x04 \x01(\tB \x92\x41\x1d\x32\x1bplatform wide currency slug\x12(\n\x04time\x18\x05 \x01(\x03\x42\x1a\x92\x41\x17\x32\x15transaction timestamp\x12\x38\n\x05value\x18\x06 \x01(\tB)\x92\x41&2$transaction amount in currency units\x12-\n\x03\x66\x65\x65\x18\x07 \x01(\tB \x92\x41\x1d\x32\x1btransaction fee, depricated\x12\x0c\n\x04hash\x18\x08 \x01(\t\x12@\n\x08isOutput\x18\t \x01(\x08\x42.\x92\x41+2)used only for transactions list of wallet:\xb7\x02\x92\x41\xb3\x02\n\xd0\x01*\x1bGeneral Transaction Message2\x86\x01If transaction is sent or completed, it has `hash` field. `fee` field using is not recommended, `time` is transaction timestamp if any\xd2\x01\x04\x66rom\xd2\x01\x02to\xd2\x01\x0c\x63urrencySlug\xd2\x01\x05value\xd2\x01\x04time2^\x12\\{\"from\": \"some address\", \"to\": \"another wallet\", \"value\": \"1000\", \"currencySlug\": \"bitcoin\"}\"\xc3\x02\n\x1aGetTransactionsListRequest\x12\x10\n\x08walletId\x18\x01 \x01(\x05\x12\x15\n\rwalletAddress\x18\x02 \x01(\t\x12\x10\n\x08\x66romTime\x18\x03 \x01(\x05\x12\x0e\n\x06toTime\x18\x04 \x01(\x03:\xd9\x01\x92\x41\xd5\x01\n\xba\x01*9Get transactions for specified `walletId`/`walletAddress`2}need `walletId` or `walletAddress` for list. If only address specified id got from service DB. Filters may be not implemented2\x16\x12\x14{ \"walletId\": \"152\"}\"\xae\x02\n\x1bGetTransactionsListResponse\x12\x32\n\x06status\x18\x01 \x01(\x0b\x32\".blockchain_gateway.ResponseHeader\x12\x41\n\x0ctransactions\x18\x02 \x03(\x0b\x32+.blockchain_gateway.GetTransactionsResponse:\x97\x01\x92\x41\x93\x01\n\x90\x01*&Transactions List For Specified Wallet26NB: for each transaction `isOutput` field is required!\xd2\x01\x06status\xd2\x01\x0ctransactions\xd2\x01\x15transactions.isOutput\"\x88\x05\n\x17GetTransactionsResponse\x12\x43\n\x06status\x18\x01 \x01(\x0b\x32\".blockchain_gateway.ResponseHeaderB\x0f\x92\x41\x0c\x32\ndepricated\x12\x0c\n\x04hash\x18\x02 \x01(\t\x12\x1c\n\x04time\x18\x03 \x01(\x03\x42\x0e\x92\x41\x0b\x32\ttimestamp\x12\x39\n\x08isOutput\x18\x04 \x01(\x08\x42\'\x92\x41$2\"True if trx from wallet in request\x12!\n\x04\x66rom\x18\x05 \x01(\tB\x13\x92\x41\x10\x32\x0esender address\x12!\n\x02to\x18\x06 \x01(\tB\x15\x92\x41\x12\x32\x10reciever address\x12\'\n\x03\x66\x65\x65\x18\x07 \x01(\x04\x42\x1a\x92\x41\x17\x32\x15\x64\x65pricated, don\'t use\x12\x0f\n\x07isError\x18\x08 \x01(\x08\x12\r\n\x05value\x18\t \x01(\t\x12\x34\n\x0c\x63urrencySlug\x18\n \x01(\tB\x1e\x92\x41\x1b\x32\x19platform wide currency id:\xfb\x01\x92\x41\xf7\x01\n[*\x14Transaction For List\xd2\x01\x06status\xd2\x01\x04hash\xd2\x01\x04\x66rom\xd2\x01\x02to\xd2\x01\x05value\xd2\x01\x08isOutput\xd2\x01\x04time\xd2\x01\x0c\x63urrencySlug2\x97\x01\x12\x94\x01{ \"hash\": \"0x767e6f6b3\", \"from\": \"0x36da559\", \"to\": \"0xa07eda22\", \"value\": \"0.0001\", \"isError\": \"False\", \"isOutput\": \"False\", \"time\": \"1548936110\" }\"\xbf\x02\n\x19SendFromColdWalletRequest\x12!\n\x02to\x18\x01 \x01(\tB\x15\x92\x41\x12\x32\x10reciever address\x12\x36\n\x0c\x63urrencySlug\x18\x02 \x01(\tB \x92\x41\x1d\x32\x1bplatfrom wide currency slug\x12\x30\n\x05value\x18\x03 \x01(\tB!\x92\x41\x1e\x32\x1ctrx amount in currency units\x12\'\n\x03\x66\x65\x65\x18\x04 \x01(\x05\x42\x1a\x92\x41\x17\x32\x15\x64\x65pricated, don\'t use:l\x92\x41i\ng*%Send Trx From Platform to Some Wallet2\"NB: `fee` field is not recommended\xd2\x01\x02to\xd2\x01\x0c\x63urrencySlug\xd2\x01\x05value\"\xcc\x01\n\x1aSendFromColdWalletResponse\x12\x32\n\x06status\x18\x01 \x01(\x0b\x32\".blockchain_gateway.ResponseHeader\x12\"\n\x04hash\x18\x02 \x01(\tB\x14\x92\x41\x11\x32\x0fresult trx hash\x12 \n\x04time\x18\x03 \x01(\x03\x42\x12\x92\x41\x0f\x32\rtrx timestamp:4\x92\x41\x31\n/*\x1dReturns Only Transaction Hash\xd2\x01\x06status\xd2\x01\x04hash\"\xb0\x02\n\x17SendToColdWalletRequest\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\t\x12*\n\x03\x66\x65\x65\x18\x04 \x01(\tB\x1d\x92\x41\x1a\x32\x18\x64\x65pricated; don\'t use it:\xbc\x01\x92\x41\xb8\x01\n\xb5\x01*.Get Back Amount to Platform From Pledge Wallet2{Need wallet `id` or `address` of generated wallet to get back `value` to platform\'s wallet. NB: `fee` using not recommended\xd2\x01\x05value\"\xcd\x01\n\x18SendToColdWalletResponse\x12\x32\n\x06status\x18\x01 \x01(\x0b\x32\".blockchain_gateway.ResponseHeader\x12\x34\n\x0btransaction\x18\x02 \x01(\x0b\x32\x1f.blockchain_gateway.Transaction:G\x92\x41\x44\nB*)Transaction Data For Returned Back Amount\xd2\x01\x06status\xd2\x01\x0btransaction\"\xc4\x02\n\x15GetTransactionRequest\x12\x1b\n\x04hash\x18\x01 \x01(\tB\r\x92\x41\n2\x08trx hash\x12\x36\n\x0c\x63urrencySlug\x18\x02 \x01(\tB \x92\x41\x1d\x32\x1bplatform wide currency slug\x12S\n\x02to\x18\x03 \x01(\tBG\x92\x41\x44\x32\x42trx destination address, required for btc only, ignored for other.:\x80\x01\x92\x41}\n/*\x17Get Transaction by Hash\xd2\x01\x04hash\xd2\x01\x0c\x63urrencySlug2J\x12H{ \"hash\": \"0x767e6f6b3\", \"currencySlug\": \"somecoin\", \"to\": \"0xa07eda22\"}\"\xed\x01\n\x16GetTransactionResponse\x12\x32\n\x06status\x18\x01 \x01(\x0b\x32\".blockchain_gateway.ResponseHeader\x12\x34\n\x0btransaction\x18\x02 \x01(\x0b\x32\x1f.blockchain_gateway.Transaction:i\x92\x41\x66\nd*\x17Get Transaction by Hash2@If no transaction got from blockchain status.status == NOT_FOUND\xd2\x01\x06status\"\x96\x02\n\x13\x43heckAddressRequest\x12$\n\x07\x61\x64\x64ress\x18\x01 \x01(\tB\x13\x92\x41\x10\x32\x0ewallet address\x12\x32\n\x0c\x63urrencySlug\x18\x02 \x01(\tB\x1c\x92\x41\x19\x32\x17wallet address currency:\xa4\x01\x92\x41\xa0\x01\n\x9d\x01*#Check existing of specified address2]If no wallet `id` specified `address` used to find it. Using only `address` is not recomended\xd2\x01\x07\x61\x64\x64ress\xd2\x01\x0c\x63urrencySlug\"\xac\x01\n\x14\x43heckAddressResponse\x12\x32\n\x06status\x18\x01 \x01(\x0b\x32\".blockchain_gateway.ResponseHeader\x12\x12\n\nisinstance\x18\x02 \x01(\x08\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t:7\x92\x41\x34\n2*#Check existing of specified address\xd2\x01\nisinstance*h\n\x0eResponseStatus\x12\r\n\tUNDEFINED\x10\x00\x12\x0b\n\x07SUCCESS\x10\x01\x12\r\n\tNOT_FOUND\x10\x02\x12\t\n\x05\x45RROR\x10\x03\x12\x13\n\x0fINVALID_REQUEST\x10\x04\x12\x0b\n\x07PENDING\x10\x05\x32\xcf\x11\n\x18\x42lockchainGatewayService\x12\x8b\x01\n\x06Health\x12 .blockchain_gateway.EmptyRequest\x1a .blockchain_gateway.EmptyRequest\"=\x82\xd3\xe4\x93\x02\t\x12\x07/health\x92\x41+\x1a)Health checking endpoint. Nothing returns\x12\xd0\x01\n\x16GetAvailableCurrencies\x12 .blockchain_gateway.EmptyRequest\x1a/.blockchain_gateway.AvailableCurrenciesResponse\"c\x82\xd3\xe4\x93\x02\r\x12\x0b/currencies\x92\x41M\x12\x0f\x43urrencies list\x1a:returns list of currencies and tokens supproted by service\x12\xa3\x01\n\nGetBalance\x12%.blockchain_gateway.GetBalanceRequest\x1a&.blockchain_gateway.GetBalanceResponse\"F\x82\xd3\xe4\x93\x02\x17\x12\x15/wallets/balance/{id}\x92\x41&\x12\x07\x42\x61lance\x1a\x1b\x62\x61lance of specified wallet\x12\xd3\x01\n\tGetWallet\x12$.blockchain_gateway.GetWalletRequest\x1a%.blockchain_gateway.GetWalletResponse\"y\x82\xd3\xe4\x93\x02,\x12\x0c/wallet/{id}Z\x1c\x12\x1a/wallet/new/{currencySlug}\x92\x41\x44\x12\x14Get-or-Create Wallet\x1a,if only currency send, it creates new wallet\x12\x8b\x02\n\x0fSendTransaction\x12*.blockchain_gateway.SendTransactionMessage\x1a*.blockchain_gateway.SendTransactionMessage\"\x9f\x01\x82\xd3\xe4\x93\x02\x12\"\r/transactions:\x01*\x92\x41\x83\x01\x12\x10Send Transaction\x1aoGeneral method for sending transactions to or from platform. `status` field in request is optional and ignored.\x12\xff\x01\n\x13GetTransactionsList\x12..blockchain_gateway.GetTransactionsListRequest\x1a/.blockchain_gateway.GetTransactionsListResponse\"\x86\x01\x82\xd3\xe4\x93\x02\x43\x12\x1b/transactions/id/{walletId}Z$\x12\"/transactions/addr/{walletAddress}\x92\x41:\x12\x11Transactions List\x1a%all transactions for specified wallet\x12\xa1\x02\n\x0eGetTransaction\x12).blockchain_gateway.GetTransactionRequest\x1a*.blockchain_gateway.GetTransactionResponse\"\xb7\x01\x82\xd3\xe4\x93\x02/\x12-/transactions/hash/{hash}/{currencySlug}/{to}\x92\x41\x7f\x12\x0fGet Transaction\x1alreturns only one transaction data by hash. If no transaction found NOT_FOUND status returned in message body\x12\xef\x01\n\x12SendFromColdWallet\x12-.blockchain_gateway.SendFromColdWalletRequest\x1a..blockchain_gateway.SendFromColdWalletResponse\"z\x82\xd3\xe4\x93\x02\x16\"\x11/transactions/out:\x01*\x92\x41[\x12\x12Send From Platform\x1a\x45send amount of some currency from platform\'s wallet to some specified\x12\xe3\x01\n\x10SendToColdWallet\x12+.blockchain_gateway.SendToColdWalletRequest\x1a,.blockchain_gateway.SendToColdWalletResponse\"t\x82\xd3\xe4\x93\x02\x17\"\x12/transactions/grab:\x01*\x92\x41T\x12\x10Send To Platform\x1a@get back money from some pledge wallet to platform\'s main wallet\x12\xc9\x01\n\x0c\x43heckAddress\x12\'.blockchain_gateway.CheckAddressRequest\x1a(.blockchain_gateway.CheckAddressResponse\"f\x82\xd3\xe4\x93\x02)\x12\'/check_address/{address}/{currencySlug}\x92\x41\x34\x12\rCheck Address\x1a#check existing of specified addressB\xa5\x03Z\x03\x62gw\x92\x41\x9c\x03\x12\xe9\x02\n\x1a\x42lockchain Gateway Service\x12\xc5\x02Gateway for interaction with different blockchains throw universal API. Prefered format for addresses is `hex` if it\'s possible. Amounts are in strings for precision. `Fee` fields are not supposed to use for now, only for future use or will be removed in some cases. All fields that are not marked as `required` are optional.2\x03\x31.0\"\x07/api/v1*\x01\x01\x32\x10\x61pplication/json:\x10\x61pplication/jsonb\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,protoc__gen__swagger_dot_options_dot_annotations__pb2.DESCRIPTOR,])

_RESPONSESTATUS = _descriptor.EnumDescriptor(
  name='ResponseStatus',
  full_name='blockchain_gateway.ResponseStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_FOUND', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_REQUEST', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PENDING', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=6304,
  serialized_end=6408,
)
_sym_db.RegisterEnumDescriptor(_RESPONSESTATUS)

ResponseStatus = enum_type_wrapper.EnumTypeWrapper(_RESPONSESTATUS)
UNDEFINED = 0
SUCCESS = 1
NOT_FOUND = 2
ERROR = 3
INVALID_REQUEST = 4
PENDING = 5



_RESPONSEHEADER = _descriptor.Descriptor(
  name='ResponseHeader',
  full_name='blockchain_gateway.ResponseHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.ResponseHeader.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A$2\027General response status:\tUNDEFINED'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='description', full_name='blockchain_gateway.ResponseHeader.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0352\033Description of error if any'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222Ac\n3*(General Response Header For All Messages\322\001\006status2,\022*{ \"status\": \"SUCCESS\", \"description\": \"\" }'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=125,
  serialized_end=393,
)


_EMPTYREQUEST = _descriptor.Descriptor(
  name='EmptyRequest',
  full_name='blockchain_gateway.EmptyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=395,
  serialized_end=409,
)


_AVAILABLECURRENCIESRESPONSE = _descriptor.Descriptor(
  name='AvailableCurrenciesResponse',
  full_name='blockchain_gateway.AvailableCurrenciesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.AvailableCurrenciesResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currencies', full_name='blockchain_gateway.AvailableCurrenciesResponse.currencies', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\034\n\032*\017Currencies list\322\001\006status'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=412,
  serialized_end=576,
)


_CURRENCY = _descriptor.Descriptor(
  name='Currency',
  full_name='blockchain_gateway.Currency',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='blockchain_gateway.Currency.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0312\024Internal currency id:\0010'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='blockchain_gateway.Currency.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='slug', full_name='blockchain_gateway.Currency.slug', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0352\033Platform wide currency slug'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222AX\n\026*\rCurrency item\322\001\004slug2>\022<{ \"id\": 1, \"name\": \"superpuperaltcoin\", \"slug\": \"failcoin\" }'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=579,
  serialized_end=786,
)


_GETBALANCERESPONSE = _descriptor.Descriptor(
  name='GetBalanceResponse',
  full_name='blockchain_gateway.GetBalanceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.GetBalanceResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='balance', full_name='blockchain_gateway.GetBalanceResponse.balance', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time', full_name='blockchain_gateway.GetBalanceResponse.time', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A!2\034Timestamp of getting balance:\0010'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A2\n0*\033Balance of specified wallet\322\001\006status\322\001\007balance'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=789,
  serialized_end=985,
)


_GETBALANCEREQUEST = _descriptor.Descriptor(
  name='GetBalanceRequest',
  full_name='blockchain_gateway.GetBalanceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='blockchain_gateway.GetBalanceRequest.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0132\twallet id'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='address', full_name='blockchain_gateway.GetBalanceRequest.address', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0202\016wallet address'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\221\001\n|*\033Balance of specified wallet2]If no wallet `id` specified `address` used to find it. Using only `address` is not recomended2\021\022\017{ \"id\": \"800\" }'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=988,
  serialized_end=1225,
)


_GETWALLETREQUEST = _descriptor.Descriptor(
  name='GetWalletRequest',
  full_name='blockchain_gateway.GetWalletRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='blockchain_gateway.GetWalletRequest.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A&2$Wallet ID. Skip to create new wallet'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currencySlug', full_name='blockchain_gateway.GetWalletRequest.currencySlug', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0352\033Platform wide currency slug'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\234\001\nx*\034Get-or-create wallet request2XIf wallet `id` specified -- get wallet data. If only `currencySlug` -- create new wallet2 \022\036{ \"currencySlug\": \"ethereum\" }'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1228,
  serialized_end=1520,
)


_GETWALLETRESPONSE = _descriptor.Descriptor(
  name='GetWalletResponse',
  full_name='blockchain_gateway.GetWalletResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.GetWalletResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='blockchain_gateway.GetWalletResponse.id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0132\twallet id'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='address', full_name='blockchain_gateway.GetWalletResponse.address', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0272\025wallet public address'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currencySlug', full_name='blockchain_gateway.GetWalletResponse.currencySlug', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0352\033platform wide currency slug'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\305\001\n8*\017Wallet response\322\001\006status\322\001\002id\322\001\007address\322\001\014currencySlug2\210\001\022\205\001{ \"status\": {\"status\": \"SUCCESS\"}, \"currencySlug\": \"ethereum\", \"id\": \"523\", \"address\": \"0xa07edA228F8053B40ec339b22De95B44a7da1E3A\" }'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1523,
  serialized_end=1927,
)


_SENDTRANSACTIONMESSAGE = _descriptor.Descriptor(
  name='SendTransactionMessage',
  full_name='blockchain_gateway.SendTransactionMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.SendTransactionMessage.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='transaction', full_name='blockchain_gateway.SendTransactionMessage.transaction', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\244\001\n\241\001*\037Transaction Data for Blockchain2pSend this message to write it to some blockchain and the with some updates (like used fee) will be returned back\322\001\013transaction'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1930,
  serialized_end=2231,
)


_TRANSACTION = _descriptor.Descriptor(
  name='Transaction',
  full_name='blockchain_gateway.Transaction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='blockchain_gateway.Transaction.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0262\024not used, depricated'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='from', full_name='blockchain_gateway.Transaction.from', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0202\016sender address'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to', full_name='blockchain_gateway.Transaction.to', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0222\020reciever address'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currencySlug', full_name='blockchain_gateway.Transaction.currencySlug', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0352\033platform wide currency slug'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time', full_name='blockchain_gateway.Transaction.time', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0272\025transaction timestamp'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='blockchain_gateway.Transaction.value', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A&2$transaction amount in currency units'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fee', full_name='blockchain_gateway.Transaction.fee', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0352\033transaction fee, depricated'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hash', full_name='blockchain_gateway.Transaction.hash', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='isOutput', full_name='blockchain_gateway.Transaction.isOutput', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A+2)used only for transactions list of wallet'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\263\002\n\320\001*\033General Transaction Message2\206\001If transaction is sent or completed, it has `hash` field. `fee` field using is not recommended, `time` is transaction timestamp if any\322\001\004from\322\001\002to\322\001\014currencySlug\322\001\005value\322\001\004time2^\022\\{\"from\": \"some address\", \"to\": \"another wallet\", \"value\": \"1000\", \"currencySlug\": \"bitcoin\"}'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2234,
  serialized_end=2953,
)


_GETTRANSACTIONSLISTREQUEST = _descriptor.Descriptor(
  name='GetTransactionsListRequest',
  full_name='blockchain_gateway.GetTransactionsListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='walletId', full_name='blockchain_gateway.GetTransactionsListRequest.walletId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='walletAddress', full_name='blockchain_gateway.GetTransactionsListRequest.walletAddress', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fromTime', full_name='blockchain_gateway.GetTransactionsListRequest.fromTime', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='toTime', full_name='blockchain_gateway.GetTransactionsListRequest.toTime', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\325\001\n\272\001*9Get transactions for specified `walletId`/`walletAddress`2}need `walletId` or `walletAddress` for list. If only address specified id got from service DB. Filters may be not implemented2\026\022\024{ \"walletId\": \"152\"}'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2956,
  serialized_end=3279,
)


_GETTRANSACTIONSLISTRESPONSE = _descriptor.Descriptor(
  name='GetTransactionsListResponse',
  full_name='blockchain_gateway.GetTransactionsListResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.GetTransactionsListResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='transactions', full_name='blockchain_gateway.GetTransactionsListResponse.transactions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\223\001\n\220\001*&Transactions List For Specified Wallet26NB: for each transaction `isOutput` field is required!\322\001\006status\322\001\014transactions\322\001\025transactions.isOutput'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3282,
  serialized_end=3584,
)


_GETTRANSACTIONSRESPONSE = _descriptor.Descriptor(
  name='GetTransactionsResponse',
  full_name='blockchain_gateway.GetTransactionsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.GetTransactionsResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0142\ndepricated'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hash', full_name='blockchain_gateway.GetTransactionsResponse.hash', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time', full_name='blockchain_gateway.GetTransactionsResponse.time', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0132\ttimestamp'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='isOutput', full_name='blockchain_gateway.GetTransactionsResponse.isOutput', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A$2\"True if trx from wallet in request'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='from', full_name='blockchain_gateway.GetTransactionsResponse.from', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0202\016sender address'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to', full_name='blockchain_gateway.GetTransactionsResponse.to', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0222\020reciever address'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fee', full_name='blockchain_gateway.GetTransactionsResponse.fee', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0272\025depricated, don\'t use'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='isError', full_name='blockchain_gateway.GetTransactionsResponse.isError', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='blockchain_gateway.GetTransactionsResponse.value', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currencySlug', full_name='blockchain_gateway.GetTransactionsResponse.currencySlug', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0332\031platform wide currency id'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\367\001\n[*\024Transaction For List\322\001\006status\322\001\004hash\322\001\004from\322\001\002to\322\001\005value\322\001\010isOutput\322\001\004time\322\001\014currencySlug2\227\001\022\224\001{ \"hash\": \"0x767e6f6b3\", \"from\": \"0x36da559\", \"to\": \"0xa07eda22\", \"value\": \"0.0001\", \"isError\": \"False\", \"isOutput\": \"False\", \"time\": \"1548936110\" }'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3587,
  serialized_end=4235,
)


_SENDFROMCOLDWALLETREQUEST = _descriptor.Descriptor(
  name='SendFromColdWalletRequest',
  full_name='blockchain_gateway.SendFromColdWalletRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='to', full_name='blockchain_gateway.SendFromColdWalletRequest.to', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0222\020reciever address'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currencySlug', full_name='blockchain_gateway.SendFromColdWalletRequest.currencySlug', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0352\033platfrom wide currency slug'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='blockchain_gateway.SendFromColdWalletRequest.value', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0362\034trx amount in currency units'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fee', full_name='blockchain_gateway.SendFromColdWalletRequest.fee', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0272\025depricated, don\'t use'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222Ai\ng*%Send Trx From Platform to Some Wallet2\"NB: `fee` field is not recommended\322\001\002to\322\001\014currencySlug\322\001\005value'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4238,
  serialized_end=4557,
)


_SENDFROMCOLDWALLETRESPONSE = _descriptor.Descriptor(
  name='SendFromColdWalletResponse',
  full_name='blockchain_gateway.SendFromColdWalletResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.SendFromColdWalletResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hash', full_name='blockchain_gateway.SendFromColdWalletResponse.hash', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0212\017result trx hash'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time', full_name='blockchain_gateway.SendFromColdWalletResponse.time', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0172\rtrx timestamp'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A1\n/*\035Returns Only Transaction Hash\322\001\006status\322\001\004hash'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4560,
  serialized_end=4764,
)


_SENDTOCOLDWALLETREQUEST = _descriptor.Descriptor(
  name='SendToColdWalletRequest',
  full_name='blockchain_gateway.SendToColdWalletRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='blockchain_gateway.SendToColdWalletRequest.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='address', full_name='blockchain_gateway.SendToColdWalletRequest.address', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='blockchain_gateway.SendToColdWalletRequest.value', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fee', full_name='blockchain_gateway.SendToColdWalletRequest.fee', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0322\030depricated; don\'t use it'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\270\001\n\265\001*.Get Back Amount to Platform From Pledge Wallet2{Need wallet `id` or `address` of generated wallet to get back `value` to platform\'s wallet. NB: `fee` using not recommended\322\001\005value'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4767,
  serialized_end=5071,
)


_SENDTOCOLDWALLETRESPONSE = _descriptor.Descriptor(
  name='SendToColdWalletResponse',
  full_name='blockchain_gateway.SendToColdWalletResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.SendToColdWalletResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='transaction', full_name='blockchain_gateway.SendToColdWalletResponse.transaction', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222AD\nB*)Transaction Data For Returned Back Amount\322\001\006status\322\001\013transaction'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5074,
  serialized_end=5279,
)


_GETTRANSACTIONREQUEST = _descriptor.Descriptor(
  name='GetTransactionRequest',
  full_name='blockchain_gateway.GetTransactionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hash', full_name='blockchain_gateway.GetTransactionRequest.hash', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\n2\010trx hash'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currencySlug', full_name='blockchain_gateway.GetTransactionRequest.currencySlug', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0352\033platform wide currency slug'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to', full_name='blockchain_gateway.GetTransactionRequest.to', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222AD2Btrx destination address, required for btc only, ignored for other.'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A}\n/*\027Get Transaction by Hash\322\001\004hash\322\001\014currencySlug2J\022H{ \"hash\": \"0x767e6f6b3\", \"currencySlug\": \"somecoin\", \"to\": \"0xa07eda22\"}'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5282,
  serialized_end=5606,
)


_GETTRANSACTIONRESPONSE = _descriptor.Descriptor(
  name='GetTransactionResponse',
  full_name='blockchain_gateway.GetTransactionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.GetTransactionResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='transaction', full_name='blockchain_gateway.GetTransactionResponse.transaction', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222Af\nd*\027Get Transaction by Hash2@If no transaction got from blockchain status.status == NOT_FOUND\322\001\006status'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5609,
  serialized_end=5846,
)


_CHECKADDRESSREQUEST = _descriptor.Descriptor(
  name='CheckAddressRequest',
  full_name='blockchain_gateway.CheckAddressRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='blockchain_gateway.CheckAddressRequest.address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0202\016wallet address'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currencySlug', full_name='blockchain_gateway.CheckAddressRequest.currencySlug', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222A\0312\027wallet address currency'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A\240\001\n\235\001*#Check existing of specified address2]If no wallet `id` specified `address` used to find it. Using only `address` is not recomended\322\001\007address\322\001\014currencySlug'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5849,
  serialized_end=6127,
)


_CHECKADDRESSRESPONSE = _descriptor.Descriptor(
  name='CheckAddressResponse',
  full_name='blockchain_gateway.CheckAddressResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='blockchain_gateway.CheckAddressResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='isinstance', full_name='blockchain_gateway.CheckAddressResponse.isinstance', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='description', full_name='blockchain_gateway.CheckAddressResponse.description', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\222A4\n2*#Check existing of specified address\322\001\nisinstance'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6130,
  serialized_end=6302,
)

_RESPONSEHEADER.fields_by_name['status'].enum_type = _RESPONSESTATUS
_AVAILABLECURRENCIESRESPONSE.fields_by_name['status'].message_type = _RESPONSEHEADER
_AVAILABLECURRENCIESRESPONSE.fields_by_name['currencies'].message_type = _CURRENCY
_GETBALANCERESPONSE.fields_by_name['status'].message_type = _RESPONSEHEADER
_GETWALLETRESPONSE.fields_by_name['status'].message_type = _RESPONSEHEADER
_SENDTRANSACTIONMESSAGE.fields_by_name['status'].message_type = _RESPONSEHEADER
_SENDTRANSACTIONMESSAGE.fields_by_name['transaction'].message_type = _TRANSACTION
_GETTRANSACTIONSLISTRESPONSE.fields_by_name['status'].message_type = _RESPONSEHEADER
_GETTRANSACTIONSLISTRESPONSE.fields_by_name['transactions'].message_type = _GETTRANSACTIONSRESPONSE
_GETTRANSACTIONSRESPONSE.fields_by_name['status'].message_type = _RESPONSEHEADER
_SENDFROMCOLDWALLETRESPONSE.fields_by_name['status'].message_type = _RESPONSEHEADER
_SENDTOCOLDWALLETRESPONSE.fields_by_name['status'].message_type = _RESPONSEHEADER
_SENDTOCOLDWALLETRESPONSE.fields_by_name['transaction'].message_type = _TRANSACTION
_GETTRANSACTIONRESPONSE.fields_by_name['status'].message_type = _RESPONSEHEADER
_GETTRANSACTIONRESPONSE.fields_by_name['transaction'].message_type = _TRANSACTION
_CHECKADDRESSRESPONSE.fields_by_name['status'].message_type = _RESPONSEHEADER
DESCRIPTOR.message_types_by_name['ResponseHeader'] = _RESPONSEHEADER
DESCRIPTOR.message_types_by_name['EmptyRequest'] = _EMPTYREQUEST
DESCRIPTOR.message_types_by_name['AvailableCurrenciesResponse'] = _AVAILABLECURRENCIESRESPONSE
DESCRIPTOR.message_types_by_name['Currency'] = _CURRENCY
DESCRIPTOR.message_types_by_name['GetBalanceResponse'] = _GETBALANCERESPONSE
DESCRIPTOR.message_types_by_name['GetBalanceRequest'] = _GETBALANCEREQUEST
DESCRIPTOR.message_types_by_name['GetWalletRequest'] = _GETWALLETREQUEST
DESCRIPTOR.message_types_by_name['GetWalletResponse'] = _GETWALLETRESPONSE
DESCRIPTOR.message_types_by_name['SendTransactionMessage'] = _SENDTRANSACTIONMESSAGE
DESCRIPTOR.message_types_by_name['Transaction'] = _TRANSACTION
DESCRIPTOR.message_types_by_name['GetTransactionsListRequest'] = _GETTRANSACTIONSLISTREQUEST
DESCRIPTOR.message_types_by_name['GetTransactionsListResponse'] = _GETTRANSACTIONSLISTRESPONSE
DESCRIPTOR.message_types_by_name['GetTransactionsResponse'] = _GETTRANSACTIONSRESPONSE
DESCRIPTOR.message_types_by_name['SendFromColdWalletRequest'] = _SENDFROMCOLDWALLETREQUEST
DESCRIPTOR.message_types_by_name['SendFromColdWalletResponse'] = _SENDFROMCOLDWALLETRESPONSE
DESCRIPTOR.message_types_by_name['SendToColdWalletRequest'] = _SENDTOCOLDWALLETREQUEST
DESCRIPTOR.message_types_by_name['SendToColdWalletResponse'] = _SENDTOCOLDWALLETRESPONSE
DESCRIPTOR.message_types_by_name['GetTransactionRequest'] = _GETTRANSACTIONREQUEST
DESCRIPTOR.message_types_by_name['GetTransactionResponse'] = _GETTRANSACTIONRESPONSE
DESCRIPTOR.message_types_by_name['CheckAddressRequest'] = _CHECKADDRESSREQUEST
DESCRIPTOR.message_types_by_name['CheckAddressResponse'] = _CHECKADDRESSRESPONSE
DESCRIPTOR.enum_types_by_name['ResponseStatus'] = _RESPONSESTATUS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ResponseHeader = _reflection.GeneratedProtocolMessageType('ResponseHeader', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEHEADER,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.ResponseHeader)
  })
_sym_db.RegisterMessage(ResponseHeader)

EmptyRequest = _reflection.GeneratedProtocolMessageType('EmptyRequest', (_message.Message,), {
  'DESCRIPTOR' : _EMPTYREQUEST,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.EmptyRequest)
  })
_sym_db.RegisterMessage(EmptyRequest)

AvailableCurrenciesResponse = _reflection.GeneratedProtocolMessageType('AvailableCurrenciesResponse', (_message.Message,), {
  'DESCRIPTOR' : _AVAILABLECURRENCIESRESPONSE,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.AvailableCurrenciesResponse)
  })
_sym_db.RegisterMessage(AvailableCurrenciesResponse)

Currency = _reflection.GeneratedProtocolMessageType('Currency', (_message.Message,), {
  'DESCRIPTOR' : _CURRENCY,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.Currency)
  })
_sym_db.RegisterMessage(Currency)

GetBalanceResponse = _reflection.GeneratedProtocolMessageType('GetBalanceResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETBALANCERESPONSE,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.GetBalanceResponse)
  })
_sym_db.RegisterMessage(GetBalanceResponse)

GetBalanceRequest = _reflection.GeneratedProtocolMessageType('GetBalanceRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETBALANCEREQUEST,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.GetBalanceRequest)
  })
_sym_db.RegisterMessage(GetBalanceRequest)

GetWalletRequest = _reflection.GeneratedProtocolMessageType('GetWalletRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETWALLETREQUEST,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.GetWalletRequest)
  })
_sym_db.RegisterMessage(GetWalletRequest)

GetWalletResponse = _reflection.GeneratedProtocolMessageType('GetWalletResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETWALLETRESPONSE,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.GetWalletResponse)
  })
_sym_db.RegisterMessage(GetWalletResponse)

SendTransactionMessage = _reflection.GeneratedProtocolMessageType('SendTransactionMessage', (_message.Message,), {
  'DESCRIPTOR' : _SENDTRANSACTIONMESSAGE,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.SendTransactionMessage)
  })
_sym_db.RegisterMessage(SendTransactionMessage)

Transaction = _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTION,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.Transaction)
  })
_sym_db.RegisterMessage(Transaction)

GetTransactionsListRequest = _reflection.GeneratedProtocolMessageType('GetTransactionsListRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTRANSACTIONSLISTREQUEST,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.GetTransactionsListRequest)
  })
_sym_db.RegisterMessage(GetTransactionsListRequest)

GetTransactionsListResponse = _reflection.GeneratedProtocolMessageType('GetTransactionsListResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTRANSACTIONSLISTRESPONSE,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.GetTransactionsListResponse)
  })
_sym_db.RegisterMessage(GetTransactionsListResponse)

GetTransactionsResponse = _reflection.GeneratedProtocolMessageType('GetTransactionsResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTRANSACTIONSRESPONSE,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.GetTransactionsResponse)
  })
_sym_db.RegisterMessage(GetTransactionsResponse)

SendFromColdWalletRequest = _reflection.GeneratedProtocolMessageType('SendFromColdWalletRequest', (_message.Message,), {
  'DESCRIPTOR' : _SENDFROMCOLDWALLETREQUEST,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.SendFromColdWalletRequest)
  })
_sym_db.RegisterMessage(SendFromColdWalletRequest)

SendFromColdWalletResponse = _reflection.GeneratedProtocolMessageType('SendFromColdWalletResponse', (_message.Message,), {
  'DESCRIPTOR' : _SENDFROMCOLDWALLETRESPONSE,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.SendFromColdWalletResponse)
  })
_sym_db.RegisterMessage(SendFromColdWalletResponse)

SendToColdWalletRequest = _reflection.GeneratedProtocolMessageType('SendToColdWalletRequest', (_message.Message,), {
  'DESCRIPTOR' : _SENDTOCOLDWALLETREQUEST,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.SendToColdWalletRequest)
  })
_sym_db.RegisterMessage(SendToColdWalletRequest)

SendToColdWalletResponse = _reflection.GeneratedProtocolMessageType('SendToColdWalletResponse', (_message.Message,), {
  'DESCRIPTOR' : _SENDTOCOLDWALLETRESPONSE,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.SendToColdWalletResponse)
  })
_sym_db.RegisterMessage(SendToColdWalletResponse)

GetTransactionRequest = _reflection.GeneratedProtocolMessageType('GetTransactionRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTRANSACTIONREQUEST,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.GetTransactionRequest)
  })
_sym_db.RegisterMessage(GetTransactionRequest)

GetTransactionResponse = _reflection.GeneratedProtocolMessageType('GetTransactionResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTRANSACTIONRESPONSE,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.GetTransactionResponse)
  })
_sym_db.RegisterMessage(GetTransactionResponse)

CheckAddressRequest = _reflection.GeneratedProtocolMessageType('CheckAddressRequest', (_message.Message,), {
  'DESCRIPTOR' : _CHECKADDRESSREQUEST,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.CheckAddressRequest)
  })
_sym_db.RegisterMessage(CheckAddressRequest)

CheckAddressResponse = _reflection.GeneratedProtocolMessageType('CheckAddressResponse', (_message.Message,), {
  'DESCRIPTOR' : _CHECKADDRESSRESPONSE,
  '__module__' : 'blockchain_gateway_pb2'
  # @@protoc_insertion_point(class_scope:blockchain_gateway.CheckAddressResponse)
  })
_sym_db.RegisterMessage(CheckAddressResponse)


DESCRIPTOR._options = None
_RESPONSEHEADER.fields_by_name['status']._options = None
_RESPONSEHEADER.fields_by_name['description']._options = None
_RESPONSEHEADER._options = None
_AVAILABLECURRENCIESRESPONSE._options = None
_CURRENCY.fields_by_name['id']._options = None
_CURRENCY.fields_by_name['slug']._options = None
_CURRENCY._options = None
_GETBALANCERESPONSE.fields_by_name['time']._options = None
_GETBALANCERESPONSE._options = None
_GETBALANCEREQUEST.fields_by_name['id']._options = None
_GETBALANCEREQUEST.fields_by_name['address']._options = None
_GETBALANCEREQUEST._options = None
_GETWALLETREQUEST.fields_by_name['id']._options = None
_GETWALLETREQUEST.fields_by_name['currencySlug']._options = None
_GETWALLETREQUEST._options = None
_GETWALLETRESPONSE.fields_by_name['id']._options = None
_GETWALLETRESPONSE.fields_by_name['address']._options = None
_GETWALLETRESPONSE.fields_by_name['currencySlug']._options = None
_GETWALLETRESPONSE._options = None
_SENDTRANSACTIONMESSAGE._options = None
_TRANSACTION.fields_by_name['id']._options = None
_TRANSACTION.fields_by_name['from']._options = None
_TRANSACTION.fields_by_name['to']._options = None
_TRANSACTION.fields_by_name['currencySlug']._options = None
_TRANSACTION.fields_by_name['time']._options = None
_TRANSACTION.fields_by_name['value']._options = None
_TRANSACTION.fields_by_name['fee']._options = None
_TRANSACTION.fields_by_name['isOutput']._options = None
_TRANSACTION._options = None
_GETTRANSACTIONSLISTREQUEST._options = None
_GETTRANSACTIONSLISTRESPONSE._options = None
_GETTRANSACTIONSRESPONSE.fields_by_name['status']._options = None
_GETTRANSACTIONSRESPONSE.fields_by_name['time']._options = None
_GETTRANSACTIONSRESPONSE.fields_by_name['isOutput']._options = None
_GETTRANSACTIONSRESPONSE.fields_by_name['from']._options = None
_GETTRANSACTIONSRESPONSE.fields_by_name['to']._options = None
_GETTRANSACTIONSRESPONSE.fields_by_name['fee']._options = None
_GETTRANSACTIONSRESPONSE.fields_by_name['currencySlug']._options = None
_GETTRANSACTIONSRESPONSE._options = None
_SENDFROMCOLDWALLETREQUEST.fields_by_name['to']._options = None
_SENDFROMCOLDWALLETREQUEST.fields_by_name['currencySlug']._options = None
_SENDFROMCOLDWALLETREQUEST.fields_by_name['value']._options = None
_SENDFROMCOLDWALLETREQUEST.fields_by_name['fee']._options = None
_SENDFROMCOLDWALLETREQUEST._options = None
_SENDFROMCOLDWALLETRESPONSE.fields_by_name['hash']._options = None
_SENDFROMCOLDWALLETRESPONSE.fields_by_name['time']._options = None
_SENDFROMCOLDWALLETRESPONSE._options = None
_SENDTOCOLDWALLETREQUEST.fields_by_name['fee']._options = None
_SENDTOCOLDWALLETREQUEST._options = None
_SENDTOCOLDWALLETRESPONSE._options = None
_GETTRANSACTIONREQUEST.fields_by_name['hash']._options = None
_GETTRANSACTIONREQUEST.fields_by_name['currencySlug']._options = None
_GETTRANSACTIONREQUEST.fields_by_name['to']._options = None
_GETTRANSACTIONREQUEST._options = None
_GETTRANSACTIONRESPONSE._options = None
_CHECKADDRESSREQUEST.fields_by_name['address']._options = None
_CHECKADDRESSREQUEST.fields_by_name['currencySlug']._options = None
_CHECKADDRESSREQUEST._options = None
_CHECKADDRESSRESPONSE._options = None

_BLOCKCHAINGATEWAYSERVICE = _descriptor.ServiceDescriptor(
  name='BlockchainGatewayService',
  full_name='blockchain_gateway.BlockchainGatewayService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=6411,
  serialized_end=8666,
  methods=[
  _descriptor.MethodDescriptor(
    name='Health',
    full_name='blockchain_gateway.BlockchainGatewayService.Health',
    index=0,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_EMPTYREQUEST,
    serialized_options=_b('\202\323\344\223\002\t\022\007/health\222A+\032)Health checking endpoint. Nothing returns'),
  ),
  _descriptor.MethodDescriptor(
    name='GetAvailableCurrencies',
    full_name='blockchain_gateway.BlockchainGatewayService.GetAvailableCurrencies',
    index=1,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_AVAILABLECURRENCIESRESPONSE,
    serialized_options=_b('\202\323\344\223\002\r\022\013/currencies\222AM\022\017Currencies list\032:returns list of currencies and tokens supproted by service'),
  ),
  _descriptor.MethodDescriptor(
    name='GetBalance',
    full_name='blockchain_gateway.BlockchainGatewayService.GetBalance',
    index=2,
    containing_service=None,
    input_type=_GETBALANCEREQUEST,
    output_type=_GETBALANCERESPONSE,
    serialized_options=_b('\202\323\344\223\002\027\022\025/wallets/balance/{id}\222A&\022\007Balance\032\033balance of specified wallet'),
  ),
  _descriptor.MethodDescriptor(
    name='GetWallet',
    full_name='blockchain_gateway.BlockchainGatewayService.GetWallet',
    index=3,
    containing_service=None,
    input_type=_GETWALLETREQUEST,
    output_type=_GETWALLETRESPONSE,
    serialized_options=_b('\202\323\344\223\002,\022\014/wallet/{id}Z\034\022\032/wallet/new/{currencySlug}\222AD\022\024Get-or-Create Wallet\032,if only currency send, it creates new wallet'),
  ),
  _descriptor.MethodDescriptor(
    name='SendTransaction',
    full_name='blockchain_gateway.BlockchainGatewayService.SendTransaction',
    index=4,
    containing_service=None,
    input_type=_SENDTRANSACTIONMESSAGE,
    output_type=_SENDTRANSACTIONMESSAGE,
    serialized_options=_b('\202\323\344\223\002\022\"\r/transactions:\001*\222A\203\001\022\020Send Transaction\032oGeneral method for sending transactions to or from platform. `status` field in request is optional and ignored.'),
  ),
  _descriptor.MethodDescriptor(
    name='GetTransactionsList',
    full_name='blockchain_gateway.BlockchainGatewayService.GetTransactionsList',
    index=5,
    containing_service=None,
    input_type=_GETTRANSACTIONSLISTREQUEST,
    output_type=_GETTRANSACTIONSLISTRESPONSE,
    serialized_options=_b('\202\323\344\223\002C\022\033/transactions/id/{walletId}Z$\022\"/transactions/addr/{walletAddress}\222A:\022\021Transactions List\032%all transactions for specified wallet'),
  ),
  _descriptor.MethodDescriptor(
    name='GetTransaction',
    full_name='blockchain_gateway.BlockchainGatewayService.GetTransaction',
    index=6,
    containing_service=None,
    input_type=_GETTRANSACTIONREQUEST,
    output_type=_GETTRANSACTIONRESPONSE,
    serialized_options=_b('\202\323\344\223\002/\022-/transactions/hash/{hash}/{currencySlug}/{to}\222A\177\022\017Get Transaction\032lreturns only one transaction data by hash. If no transaction found NOT_FOUND status returned in message body'),
  ),
  _descriptor.MethodDescriptor(
    name='SendFromColdWallet',
    full_name='blockchain_gateway.BlockchainGatewayService.SendFromColdWallet',
    index=7,
    containing_service=None,
    input_type=_SENDFROMCOLDWALLETREQUEST,
    output_type=_SENDFROMCOLDWALLETRESPONSE,
    serialized_options=_b('\202\323\344\223\002\026\"\021/transactions/out:\001*\222A[\022\022Send From Platform\032Esend amount of some currency from platform\'s wallet to some specified'),
  ),
  _descriptor.MethodDescriptor(
    name='SendToColdWallet',
    full_name='blockchain_gateway.BlockchainGatewayService.SendToColdWallet',
    index=8,
    containing_service=None,
    input_type=_SENDTOCOLDWALLETREQUEST,
    output_type=_SENDTOCOLDWALLETRESPONSE,
    serialized_options=_b('\202\323\344\223\002\027\"\022/transactions/grab:\001*\222AT\022\020Send To Platform\032@get back money from some pledge wallet to platform\'s main wallet'),
  ),
  _descriptor.MethodDescriptor(
    name='CheckAddress',
    full_name='blockchain_gateway.BlockchainGatewayService.CheckAddress',
    index=9,
    containing_service=None,
    input_type=_CHECKADDRESSREQUEST,
    output_type=_CHECKADDRESSRESPONSE,
    serialized_options=_b('\202\323\344\223\002)\022\'/check_address/{address}/{currencySlug}\222A4\022\rCheck Address\032#check existing of specified address'),
  ),
])
_sym_db.RegisterServiceDescriptor(_BLOCKCHAINGATEWAYSERVICE)

DESCRIPTOR.services_by_name['BlockchainGatewayService'] = _BLOCKCHAINGATEWAYSERVICE

# @@protoc_insertion_point(module_scope)
