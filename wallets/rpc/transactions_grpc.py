# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: transactions.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.timestamp_pb2
import google.protobuf.duration_pb2
import google.api.annotations_pb2
import protoc_gen_swagger.options.annotations_pb2
import transactions_pb2


class TransactionsBase(abc.ABC):

    @abc.abstractmethod
    async def Healthz(self, stream: 'grpclib.server.Stream[transactions_pb2.HealthzRequest, transactions_pb2.HealthzResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateTransfer(self, stream: 'grpclib.server.Stream[transactions_pb2.CreateTransferRequest, transactions_pb2.CreateTransferResponse]') -> None:
        pass

    @abc.abstractmethod
    async def StartMonitoring(self, stream: 'grpclib.server.Stream[transactions_pb2.StartMonitoringRequest, transactions_pb2.StartMonitoringResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetOutPutTransactions(self, stream: 'grpclib.server.Stream[transactions_pb2.GetOutPutRequest, transactions_pb2.GetOutPutResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/transaction.Transactions/Healthz': grpclib.const.Handler(
                self.Healthz,
                grpclib.const.Cardinality.UNARY_UNARY,
                transactions_pb2.HealthzRequest,
                transactions_pb2.HealthzResponse,
            ),
            '/transaction.Transactions/CreateTransfer': grpclib.const.Handler(
                self.CreateTransfer,
                grpclib.const.Cardinality.UNARY_UNARY,
                transactions_pb2.CreateTransferRequest,
                transactions_pb2.CreateTransferResponse,
            ),
            '/transaction.Transactions/StartMonitoring': grpclib.const.Handler(
                self.StartMonitoring,
                grpclib.const.Cardinality.UNARY_UNARY,
                transactions_pb2.StartMonitoringRequest,
                transactions_pb2.StartMonitoringResponse,
            ),
            '/transaction.Transactions/GetOutPutTransactions': grpclib.const.Handler(
                self.GetOutPutTransactions,
                grpclib.const.Cardinality.UNARY_UNARY,
                transactions_pb2.GetOutPutRequest,
                transactions_pb2.GetOutPutResponse,
            ),
        }


class TransactionsStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Healthz = grpclib.client.UnaryUnaryMethod(
            channel,
            '/transaction.Transactions/Healthz',
            transactions_pb2.HealthzRequest,
            transactions_pb2.HealthzResponse,
        )
        self.CreateTransfer = grpclib.client.UnaryUnaryMethod(
            channel,
            '/transaction.Transactions/CreateTransfer',
            transactions_pb2.CreateTransferRequest,
            transactions_pb2.CreateTransferResponse,
        )
        self.StartMonitoring = grpclib.client.UnaryUnaryMethod(
            channel,
            '/transaction.Transactions/StartMonitoring',
            transactions_pb2.StartMonitoringRequest,
            transactions_pb2.StartMonitoringResponse,
        )
        self.GetOutPutTransactions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/transaction.Transactions/GetOutPutTransactions',
            transactions_pb2.GetOutPutRequest,
            transactions_pb2.GetOutPutResponse,
        )
